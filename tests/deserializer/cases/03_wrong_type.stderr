error[E0277]: the trait bound `CantDeser: Deserialize<'static>` is not satisfied
  --> tests/deserializer/cases/03_wrong_type.rs:10:15
   |
10 |     item: Vec<CantDeser>,
   |               ^^^^^^^^^ the trait `Deserialize<'static>` is not implemented for `CantDeser`
   |
   = help: the following other types implement trait `Deserialize<'de>`:
             &'a Path
             &'a [u8]
             &'a str
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
             (T0, T1, T2, T3, T4)
             (T0, T1, T2, T3, T4, T5)
             (T0, T1, T2, T3, T4, T5, T6)
             (T0, T1, T2, T3, T4, T5, T6, T7)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
             AtomicBool
             AtomicI16
             AtomicI32
             AtomicI64
             AtomicI8
             AtomicIsize
             AtomicU16
             AtomicU32
             AtomicU64
             AtomicU8
             AtomicUsize
             BTreeMap<K, V>
             BTreeSet<T>
             BinaryHeap<T>
             Bound<T>
             Box<CStr>
             Box<OsStr>
             Box<Path>
             Box<T>
             Box<[T]>
             Box<str>
             CString
             Cell<T>
             Cow<'a, T>
             Duration
             HashMap<K, V, S>
             HashSet<T, S>
             IgnoredAny
             IpAddr
             Ipv4Addr
             Ipv6Addr
             LinkedList<T>
             Mutex<T>
             NonZero<i128>
             NonZero<i16>
             NonZero<i32>
             NonZero<i64>
             NonZero<i8>
             NonZero<isize>
             NonZero<u128>
             NonZero<u16>
             NonZero<u32>
             NonZero<u64>
             NonZero<u8>
             NonZero<usize>
             OsString
             PathBuf
             PhantomData<T>
             RangeFrom<Idx>
             RangeInclusive<Idx>
             RangeTo<Idx>
             RefCell<T>
             Result<T, E>
             Reverse<T>
             RwLock<T>
             Saturating<i128>
             Saturating<i16>
             Saturating<i32>
             Saturating<i64>
             Saturating<i8>
             Saturating<isize>
             Saturating<u128>
             Saturating<u16>
             Saturating<u32>
             Saturating<u64>
             Saturating<u8>
             Saturating<usize>
             SocketAddr
             SocketAddrV4
             SocketAddrV6
             SystemTime
             Test
             Vec<T>
             VecDeque<T>
             Wrapping<T>
             [T; 0]
             [T; 10]
             [T; 11]
             [T; 12]
             [T; 13]
             [T; 14]
             [T; 15]
             [T; 16]
             [T; 17]
             [T; 18]
             [T; 19]
             [T; 1]
             [T; 20]
             [T; 21]
             [T; 22]
             [T; 23]
             [T; 24]
             [T; 25]
             [T; 26]
             [T; 27]
             [T; 28]
             [T; 29]
             [T; 2]
             [T; 30]
             [T; 31]
             [T; 32]
             [T; 3]
             [T; 4]
             [T; 5]
             [T; 6]
             [T; 7]
             [T; 8]
             [T; 9]
             bool
             char
             clauser::types::Date
             f32
             f64
             i128
             i16
             i32
             i64
             i8
             isize
             serde::__private::de::content::Content<'de>
             std::ops::Range<Idx>
             std::option::Option<T>
             std::string::String
             u128
             u16
             u32
             u64
             u8
             usize
note: required by a bound in `<TestVisitor as Visitor<'de>>::visit_map::_::{closure#0}::assert_impl_all`
  --> tests/deserializer/cases/03_wrong_type.rs:7:1
   |
7  | #[duplicate_keys]
   | ^^^^^^^^^^^^^^^^^ required by this bound in `assert_impl_all`
   = note: this error originates in the macro `clauser::static_assertions::assert_impl_all` which comes from the expansion of the attribute macro `duplicate_keys` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `CantDeser: Deserialize<'de>` is not satisfied
  --> tests/deserializer/cases/03_wrong_type.rs:10:15
   |
7  | #[duplicate_keys]
   | ----------------- required by a bound introduced by this call
...
10 |     item: Vec<CantDeser>,
   |               ^^^^^^^^^ the trait `Deserialize<'de>` is not implemented for `CantDeser`
   |
   = help: the following other types implement trait `Deserialize<'de>`:
             &'a Path
             &'a [u8]
             &'a str
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
             (T0, T1, T2, T3, T4)
             (T0, T1, T2, T3, T4, T5)
             (T0, T1, T2, T3, T4, T5, T6)
             (T0, T1, T2, T3, T4, T5, T6, T7)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
             AtomicBool
             AtomicI16
             AtomicI32
             AtomicI64
             AtomicI8
             AtomicIsize
             AtomicU16
             AtomicU32
             AtomicU64
             AtomicU8
             AtomicUsize
             BTreeMap<K, V>
             BTreeSet<T>
             BinaryHeap<T>
             Bound<T>
             Box<CStr>
             Box<OsStr>
             Box<Path>
             Box<T>
             Box<[T]>
             Box<str>
             CString
             Cell<T>
             Cow<'a, T>
             Duration
             HashMap<K, V, S>
             HashSet<T, S>
             IgnoredAny
             IpAddr
             Ipv4Addr
             Ipv6Addr
             LinkedList<T>
             Mutex<T>
             NonZero<i128>
             NonZero<i16>
             NonZero<i32>
             NonZero<i64>
             NonZero<i8>
             NonZero<isize>
             NonZero<u128>
             NonZero<u16>
             NonZero<u32>
             NonZero<u64>
             NonZero<u8>
             NonZero<usize>
             OsString
             PathBuf
             PhantomData<T>
             RangeFrom<Idx>
             RangeInclusive<Idx>
             RangeTo<Idx>
             RefCell<T>
             Result<T, E>
             Reverse<T>
             RwLock<T>
             Saturating<i128>
             Saturating<i16>
             Saturating<i32>
             Saturating<i64>
             Saturating<i8>
             Saturating<isize>
             Saturating<u128>
             Saturating<u16>
             Saturating<u32>
             Saturating<u64>
             Saturating<u8>
             Saturating<usize>
             SocketAddr
             SocketAddrV4
             SocketAddrV6
             SystemTime
             Test
             Vec<T>
             VecDeque<T>
             Wrapping<T>
             [T; 0]
             [T; 10]
             [T; 11]
             [T; 12]
             [T; 13]
             [T; 14]
             [T; 15]
             [T; 16]
             [T; 17]
             [T; 18]
             [T; 19]
             [T; 1]
             [T; 20]
             [T; 21]
             [T; 22]
             [T; 23]
             [T; 24]
             [T; 25]
             [T; 26]
             [T; 27]
             [T; 28]
             [T; 29]
             [T; 2]
             [T; 30]
             [T; 31]
             [T; 32]
             [T; 3]
             [T; 4]
             [T; 5]
             [T; 6]
             [T; 7]
             [T; 8]
             [T; 9]
             bool
             char
             clauser::types::Date
             f32
             f64
             i128
             i16
             i32
             i64
             i8
             isize
             serde::__private::de::content::Content<'de>
             std::ops::Range<Idx>
             std::option::Option<T>
             std::string::String
             u128
             u16
             u32
             u64
             u8
             usize
note: required by a bound in `next_value`
  --> $CARGO/serde-1.0.203/src/de/mod.rs
   |
   |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
   |        ---------- required by a bound in this associated function
   |     where
   |         V: Deserialize<'de>,
   |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`
